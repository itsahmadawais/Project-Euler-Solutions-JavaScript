/**
 * Problem Statement:
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 * 
 * Problem URL: https://projecteuler.net/problem=2
 */

/**
 * Algorithm:
 * Create a function that accepts two paramters.
 * Check if a or b is less than 4,000,000.
 * If a or b is equal to or greater than 4,000,000, then return 0.
 * Otherwise, check a and b if any of a or b is even-values.
 * If a or b is even valued, then sum the values and call the function recursively.
 */

const LIMIT = 4000000;
 function solution(a,b){
    let sum = 0;
    if(a>=LIMIT || b>=LIMIT){
        return 0;
    }
    if(a%2==0){
        sum+=a;
    }
    if(b%2==0){
        sum+=b;
    }
    return sum+solution(a+b,a+b+b);

}
console.log(solution(1,2));

